#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

JOURNAL_DIR="/var/log/journal"

main() {

	# check how many boots there are
	boots=$(journalctl --list-boots | wc -l)
	if [ $boots -le 2 ]; then
		echo "Only last boot saved; no pruning necessary."
		exit 0
	fi

	# get the timestamp of the last entry for boot -2
	bootstamp=$(get_timestamp -b -2)
	human=$(date -d @${bootstamp::-6}) # convert to secs, then to human
	echo "POSIX time of last boot -2 entry is: \"$bootstamp\" ($human)."

	# make sure the dir even exists
	if [ ! -d "$JOURNAL_DIR" ]; then
		echo "Journal directory \"$JOURNAL_DIR\" does not exist." >&2
		echo 1
	fi

	# evaluate eligibility for deletion of each journal file
	for journal in $(find "$JOURNAL_DIR" -name '*.journal'); do
		journalstamp=$(get_timestamp --file "$journal")
		if [ $journalstamp -le $bootstamp ]; then
			echo "Deleting journal \"$journal\"."
			rm "$journal"
		fi
	done
}

get_timestamp() { # $@ = args to pass to journalctl

	# fetch raw output from journalctl
	stamp=$(journalctl -n 1 -o export "$@" | grep __REALTIME_TIMESTAMP)
	stamp=${stamp#*=}  # cut out var name

	# sanity check that it's a valid timestamp
	if [[ ! $stamp =~ ^[0-9]{16}$ ]]; then
		echo "Invalid parsed stamp: \"$stamp\"." >&2
		echo "Ran journalctl with extra args: \"$@\"." >&2
		exit 1
	fi

	echo $stamp
}

main "$@"
